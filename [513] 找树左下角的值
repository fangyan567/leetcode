/*
 * @lc app=leetcode.cn id=513 lang=cpp
 *
 * [513] 找树左下角的值
 */

// @lc code=start
/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int findBottomLeftValue(TreeNode* root) {
        if (!root) return 0;

        queue<TreeNode *> q;
        q.push(root);
        //TreeNode *res = nullptr;
        int res = 0;

        while (!q.empty())
        {
            int n = q.size();
            res = q.front()->val;
            for (int i = 0; i < n; i++)
            {
                TreeNode *p = q.front();
                q.pop();

                if (p->left) q.push(p->left);
                if (p->right) q.push(p->right);
            }
        }
        return res;
    }
};
// @lc code=end

