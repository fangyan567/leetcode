/*
 * @lc app=leetcode.cn id=33 lang=cpp
 *
 * [33] 搜索旋转排序数组
 */

// @lc code=start
class Solution {
public:
    int search(vector<int>& nums, int target) {
        int n = nums.size();
        int i = 0, j = n - 1;
   
        while (i <= j)
        {
            int mid = i + (j - i) / 2;
            if (nums[mid] ==  target) return mid;

            else if (nums[mid] >= nums[i])
            {
                if (nums[mid] > target && target >= nums[i])
                {
                    j = mid - 1;
                }
                else
                {
                    i = mid + 1;
                }
            }
            else
            {
                if (nums[mid] < target  && nums[j] >= target)
                {
                    i = mid + 1;
                }
                else
                {
                    j = mid - 1;
                }
            }
        } 
        return -1;
    }
};
// @lc code=end

