/*
 * @lc app=leetcode.cn id=16 lang=cpp
 *
 * [16] 最接近的三数之和
 */

// @lc code=start
class Solution {
public:
    int threeSumClosest(vector<int>& nums, int target) {
        int n = nums.size();
        int res = 0;
        int diff = INT_MAX;
        sort(nums.begin(), nums.end());

        for (int i = 0; i < n; i++)
        {
            if (i > 0 && nums[i] == nums[i - 1]) continue;

            int j = i + 1, k = n - 1;
            while (j < k)
            {
                int sum = nums[j] + nums[k] + nums[i];
                //if (sum == target) return sum;

                if (abs(sum - target) < diff)
                {
                    res = sum;
                    diff = abs(sum - target);
                }
                if (sum <= target)
                {
                    ++j;
                    while (j < k && nums[j] == nums[j - 1]) ++j;
                }
                else 
                {
                    --k;
                    while (j < k && nums[k] == nums[k + 1]) --k;
                }
            }
        }
        return res;
    }
};
// @lc code=end

