/*
 * @lc app=leetcode.cn id=167 lang=cpp
 *
 * [167] 两数之和 II - 输入有序数组
 */

// @lc code=start
class Solution {
public:
    vector<int> twoSum(vector<int>& numbers, int target) {
         int n = numbers.size();
        unordered_map<int, int> m;
    
        for (int i = 0; i < n; i++)
        {
            if (m.count(target - numbers[i]))
            {
                if (i < m[target - numbers[i]])
                {
                    return {i + 1, m[target - numbers[i]] + 1};
                }
                else
                {
                    return {m[target - numbers[i]] + 1, i + 1};
                }
            }
            m[numbers[i]] = i;
        }

        return {};
    }
};
// @lc code=end

